name: CI/CD Pipeline Startup Planner Backend

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/test_db"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        working-directory: startup_planner_backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: startup_planner_backend
        run: |
          python manage.py migrate
          python manage.py test

      - name: Build Docker image
        working-directory: startup_planner_backend
        run: docker build --platform linux/amd64 -t botirk/startup_planner_backend .

      - name: Push Docker image to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker tag botirk/startup_planner_backend registry.heroku.com/startup-planner/web
          docker push registry.heroku.com/startup-planner/web

      - name: Release Docker image on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:release web --app startup-planner
